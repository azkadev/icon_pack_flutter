import 'package:flutter/material.dart';

import 'package:icon_pack_flutter/icon_pack_flutter.dart' as icon_pack_flutter;

void main(List<String> args) {
  WidgetsFlutterBinding.ensureInitialized();
  runApp(IconPackFlutterApp());
}

/// General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
class IconPackFlutterApp extends StatelessWidget {
/// General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  const IconPackFlutterApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: IconPackFlutterHomePage(),
    );
  }
}

/// General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
class IconPackFlutterHomePage extends StatefulWidget {
/// General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  const IconPackFlutterHomePage({super.key});

  @override
  State<IconPackFlutterHomePage> createState() => _IconPackFlutterHomePageState();
}

class _IconPackFlutterHomePageState extends State<IconPackFlutterHomePage> {
  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
     final MediaQueryData mediaQueryData = MediaQuery.of(context);
     
    return Scaffold(
      appBar: AppBar(
        backgroundColor: const Color.fromARGB(255, 189, 194, 199),
        title: Text(
          "Icon Pack Flutter - AZKADEV", 
                          style: TextStyle(
                            fontSize: 20,
                            fontWeight: FontWeight.bold,
                          ),
        ),
      ),
      body: SizedBox(
        height: mediaQueryData.size.height,
        width: mediaQueryData.size.width,
        child: CustomScrollView(
          slivers: [
            for (final icons in {
              icon_pack_flutter.IconPackFlutterAssetsAzkadevIconPackBold.realValues.map((e) => e.assetPath),
              icon_pack_flutter.IconPackFlutterAssetsAzkadevIconPackBroken.realValues.map((e) => e.assetPath),
              icon_pack_flutter.IconPackFlutterAssetsAzkadevIconPackBulk.realValues.map((e) => e.assetPath),
              icon_pack_flutter.IconPackFlutterAssetsAzkadevIconPackLinear.realValues.map((e) => e.assetPath),
              icon_pack_flutter.IconPackFlutterAssetsAzkadevIconPackOutline.realValues.map((e) => e.assetPath),
              icon_pack_flutter.IconPackFlutterAssetsAzkadevIconPackTwotone.realValues.map((e) => e.assetPath),
            }) ...[
              contentSliverGridWidget(
                context: context,
                children: [
                  for (final icon in icons) ...[
                    icon_pack_flutter.IconPackFlutterWidget(
                      assetPath: icon,
                    ),
                  ],
                ],
              ),
              SliverList(
                delegate: SliverChildListDelegate(
                  [
                    SizedBox(
                      height: 20,
                    ),
                    Row(
                      spacing: 10,
                      children: [
                        Expanded(
                          child: Divider(
                            height: 0.5,
                            indent: 0.5,
                            endIndent: 0.5,
                            color: Colors.grey,
                          ),
                        ),
                        Text(
                          "Icon Pack Flutter Generated By Azkadev",
                          overflow: TextOverflow.clip,
                          style: TextStyle(
                            fontSize: 20,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        Expanded(
                          child: Divider(
                            height: 0.5,
                            indent: 0.5,
                            endIndent: 0.5,
                            color: Colors.grey,
                          ),
                        ),
                      ],
                    ),
                    SizedBox(
                      height: 20,
                    ),
                  ],
                ),
              ),
            ],
          ],
        ),
      ),
    );
  }

  SliverGrid contentSliverGridWidget({
    required BuildContext context,
    required List<Widget> children,
  }) {
    final MediaQueryData mediaQueryData = MediaQuery.of(context);
    return SliverGrid(
      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: () {
          final width = mediaQueryData.size.width;
          if (width <= 500) {
            return 10;
          }
          if (width <= 800) {
            return 15;
          }
          if (width <= 1000) {
            return 20;
          }
          if (width <= 1500) {
            return 25;
          }
          return 30;
        }(),
        mainAxisSpacing: 10,
        crossAxisSpacing: 10,
      ),
      delegate: SliverChildListDelegate(
        children,
      ),
    );
  }
}
